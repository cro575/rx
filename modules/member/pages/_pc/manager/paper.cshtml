@{

    /*****************************************************************
    // Programmed by SungHO Kim (Migration: Yoona Sim)
    // KimsQ-Rx (for Microsoft Razor)
    // Copyrights © Redblock Allrights Reserved. Powered by kimsQ-Rx
    *****************************************************************/
    
    

    var g = PageData[0];
    var _m = PageData[1];
    var m = PageData[3];
    var p = PageData[4];
    var _HS = PageData[5];
    var my = PageData[6];
    var s = PageData[9];
    var _keyword = PageData[10];
    var _mod = PageData[11];
    var r = PageData[12];

    var mbruid = Request["mbruid"];
    var inbox = Request["inbox"];
    var account = Request["account"];
    var sort = Request["sort"];
    var orderby = Request["orderby"];
    var recnum = Request["recnum"];
    var where = Request["where"];
    var keyword = Request["keyword"];
    var front = Request["front"];
    var page = Request["page"];
    var type = Request["type"];
    var iframe = Request["iframe"];
    var skin = Request["skin"];

    dynamic date = _System.GetVDate(_HS["timecal"]);
    dynamic M = _DB.GetDbData_M(AppState["table_s_mbrdata"].ToString(), "memberuid="+mbruid);
    dynamic levelnum = _DB.GetDbData_M(AppState["table_s_mbrlevel"].ToString(), "gid=1");
    dynamic levelname= _DB.GetDbData_M(AppState["table_s_mbrlevel"].ToString(), "uid="+M["level"]);
    dynamic sosokname= _DB.GetDbData_M(AppState["table_s_mbrgroup"].ToString(), "uid="+M["sosok"]);
    dynamic joinsite = _DB.GetDbData_M(AppState["table_s_site"].ToString(), "uid="+M["site"]);
    dynamic M1 = _DB.GetDbData_M(AppState["table_s_mbrid"].ToString(), "uid="+M["memberuid"]);

    string sqlque = "";
    
    decimal TPG = 0;
        
    if(sort == null || sort == "") {
        sort = "uid";
    }
    if(orderby == null || orderby == "") {
        orderby = "desc";
	}        
    if(recnum == null || recnum == "" || Convert.ToInt32(recnum) >= 200) {
        recnum = "15";
	}    
    
    if (inbox == "3"){
        sqlque = "by_mbruid=" + M["memberuid"];
    }
    else{
        sqlque = "my_mbruid=" + M["memberuid"];
        
        if (inbox != "" && inbox!=null){
            sqlque = sqlque + " and inbox='" + inbox + "'"; 
        }
        
        if(where != null && where != "" && keyword != null && keyword != "") {
            string where_set = "(";
                    
            char[] delimiter = {'|'};
            string[] strArray = where.Split(delimiter);
            int str_int = 0;
                    
            sqlque = sqlque+" AND ";
                    
            foreach(var tmp in strArray) {
            if(str_int > 0) {
                    where_set = where_set+" OR ";
                }
                        
                where_set = where_set+tmp+" LIKE '%"+keyword+"%'";
                str_int++;
            }
            where_set = where_set + ")";                
            sqlque = sqlque + where_set;
	    }
    }            

    int list_start = (Convert.ToInt32(p)-1) * Convert.ToInt32(recnum);      // 페이지별 리스트 개수
    int NUM = _DB.GetDbData_Count(AppState["table_s_paper"].ToString(), sqlque);

    string RCD_sql = _System.GetQuery(AppState["table_s_paper"].ToString(), "", sqlque, sort, orderby, list_start, recnum);
    
    TPG = @_System.getTotalPage(Convert.ToDecimal(NUM), Convert.ToDecimal(recnum));     // 총 페이지수


    string inbox_to_prn = "보낸이";
    string M_col_name = "by_mbruid";

    if (inbox == "3")
    {
        inbox_to_prn = "받는이";
        M_col_name = "my_mbruid";
    }

    @RenderPage("_menu.cshtml",g, mbruid, m, _HS)            // 개별 페이지 상단 메뉴부
}


    
<div id="paperlist">

	<div class="info">

		<div class="article">
            @string.Format("{0:#,0}", Convert.ToInt32(NUM))개(@p/@TPG 페이지)
		</div>
		<div class="category">                
            <!-- <select onchange="goHref('g["url_page"].Replace('&',' ')&inbox='+this.value);">-->
            <select onchange="goHref('@g["url_page"]&inbox='+this.value);">
			<option value="">&nbsp;+ 전체</option>
			<option value="">-------------</option>            
            <option value="1" @_System.getSltStr(inbox, 1)>받은쪽지함</option>
			<option value="2" @_System.getSltStr(inbox, 2)>쪽지보관함</option>
			<option value="3" @_System.getSltStr(inbox, 3)>보낸쪽지함</option>
			</select>

		</div>
		<div class="clear"></div>
	</div>

	<form name="procForm" action="@g["s"]/" method="post" target="@Html.Raw("_action_frame_" + m)" onsubmit="return submitCheck(this);">
	<input type="hidden" name="r" value="@r" />
	<input type="hidden" name="m" value="@m" />
	<input type="hidden" name="front" value="@front" />
	<input type="hidden" name="a" value="" />

	<table summary="쪽지 리스트입니다.">
	<caption>쪽지</caption> 
	<colgroup> 
	<col width="30"> 
	<col width="50"> 
	<col width="80"> 
	<col width="20"> 
	<col> 
	<col width="90"> 
	</colgroup> 
	<thead>
	<tr>
	<th scope="col" class="side1"><img src="@g["img_core"]/_public/ico_check_01.gif" class="hand" alt="" onclick="chkFlag('members');" /></th>
	<th scope="col">번호</th>
	<th scope="col">@inbox_to_prn</th>
	<th scope="col"></th>
	<th scope="col">내용</th>
	<th scope="col" class="side2">날짜</th>
	</tr>
	</thead>
	<tbody>
        
        
    @if(NUM == 0) {        
    	<tr>
        <td><input type="checkbox" disabled="disabled" /></td>
        <td>1</td>
        <td class="cat">시스템</td>
        <td><img src="@g["img_core"]/_public/ico_paper.gif" alt="" /></td>
        <td class="sbj1">쪽지가 없습니다.</td>
        <td>@date["totime"].ToString("yyyy.MM.dd HH:mm")</td>
        </tr> 
    }
    else {
        int _rec = 0;
        
        foreach(var R in _DB.Query(RCD_sql)) {     
            int tmp_num = ((Convert.ToInt32(p)-1) * Convert.ToInt32(recnum)) + _rec++;
            int tmp_num2 = NUM - tmp_num;
            
            //R["content"] = R["content"].Replace("'&nbsp;'"," "); 
            M = _DB.GetDbData_M(AppState["table_s_mbrdata"].ToString(), "memberuid="+R[M_col_name]);   
            string M_nametype = "";	    
            if(M[_HS["nametype"]] == "") {
                M_nametype = "시스템";
			}
            else {
                M_nametype = M[_HS["nametype"]];
		    }
            
           
            <tr>
            <td><input type="checkbox" name="members" value="@R["uid"]" /></td>
            <td>@tmp_num2</td>
            <td class="cat">@M_nametype</td>
            <td><img src="@g["img_core"]/_public/ico_paper.gif" alt="" 
                
                @{
                if(R!=null || R["d_read"].ToSTring() !="1900-01-01 오전 12:00:00"){
                    @:title=
                    @R["d_read"]
                    @: 열람 class="isread"                
                } 
                }
             /></td>
            <td class="sbj">
		        <a href="#." title="@_System.getStrCut(R["content"], 100, "...")" onmouseover="qTilePop(this);" onmouseout="qTilePopKill(this);">@_System.getStrCut(R["content"], 50, "...")</a>

                @if(_System.getNew(R["d_regis"].ToString(), 24) == true) {
                    <span class="new">new</span>
                }                
	        </td>
            <td>@R["d_regis"].ToString("yyyy.MM.dd HH:mm")</td>
            </tr> 
        }
    }
	</tbody>
	</table>
	

	<div class="pagebox01">
	<script type="text/javascript">getPageLink(10,@p,@TPG,@g["img_core"]/page/default);</script>
	</div>
	
		@{
            if (inbox != "" && Convert.ToInt32(inbox) < 3)
            {
                <input type="button" value="삭제" class="btngray" onclick="actCheck('paper_delete');" />
            
                if(inbox != "2") {
                    <input type="button" value="보관" class="btngray" onclick="actCheck('paper_save');" />
                }
            }
        }

	</form>

</div>
    
<div id="qTilePopDiv"></div>

<script type="text/javascript">
//<![CDATA[
// list
function qTilePop(obj)
{
    var content ='<div style="width:300px;line-height:150%;font-family:dotum;color:#666666;border:#999999 solid 1px;padding:3px;background:lightyellow;">'+obj.title+'</div>';
	skn.style.position= "absolute";
	skn.style.display = "block";
	skn.style.zIndex = "1";
	itt = obj.title;
	obj.title = "";
	skn.innerHTML = content;
}
function get_mouse(e) 
{
    var x = myagent != "ie" ? e.pageX : event.x + (document.documentElement.clientLeft || document.body.clientLeft);
    var y = myagent != "ie" ? e.pageY : event.y + (document.documentElement.clientTop || document.body.clientTop);
    skn.style.left = (x - 0) + "px";
    skn.style.top  = (y + 20) + "px";
}
function qTilePopKill(obj) 
{
	obj.title = itt;
	itt = "";
	skn.style.top = "10000";
	skn.style.display = "none";
}
function submitCheck(f)
{
	if (f.a.value == "")
	{
		return false;
	}
}
function actCheck(act)
{
	var f = document.procForm;
    var l = document.getElementsByName("members");
    var n = l.length;
	var j = 0;
    var i;

    for (i = 0; i < n; i++)
	{
		if(l[i].checked == true)
		{
			j++;	
		}
	}
	if (!j)
	{
		alert('선택된 항목이 없습니다.      ');
		return false;
	}
	
	if(confirm('정말로 실행하시겠습니까?    '))
	{
		f.a.value = act;
		f.submit();
	}
}
if (myagent != "ie") document.captureEvents(Event.MOUSEMOVE);
document.onmousemove = get_mouse;

var skn = getId("qTilePopDiv");
var itt = '';

document.title = "@M[_HS["nametype"]]님의 쪽지함";
self.resizeTo(800,750);

//]]>
</script>


        