@{
    /*****************************************************************
    // Programmed by SungHO Kim (Migration: Yoona Sim)
    // KimsQ-Rx (for Microsoft Razor)
    // Copyrights © Redblock Allrights Reserved. Powered by kimsQ-Rx
    *****************************************************************/

    
    var m = PageData[3];
    var p = PageData[4];
    var _HS = PageData[5];
    var my = PageData[6];
    var s = PageData[9];
    var r = PageData[12];

    dynamic g = PageData[0];

    dynamic date = _System.GetVDate(_HS["timecal"]);
    
    string mbruid = Request["mbruid"];
    string sort = Request["sort"];
    string orderby = Request["orderby"];
    string recnum = Request["recnum"];
    string type = Request["type"];
    string category = Request["category"];
    string where = Request["where"];
    string keyword = Request["keyword"];
    string front = Request["front"];
    string page = Request["page"];
    string frame_name = "_action_frame_" + m;
    
    var _NUM = new Dictionary<string, int>();

    dynamic _M = null;
    dynamic d_member = _DB.Get_code("member");    

    string sqlque = "";
    decimal TPG = 0;
    int _rec = 0;
    
    if (sort == null || sort == "")
    {
        sort = "uid";
    }

    if (orderby == null || orderby == "")
    {
        orderby = "desc";
    }

    if (recnum != null && recnum != "")
    {
        if (recnum == "0" || Convert.ToInt32(recnum) >= 200)
        {
            recnum = "20";
        }
    }
    else
    {
        recnum = "20";
    }

    if (type == null || type == "")
    {
        type = "follower";
    }

    if (type == "follower")
    {
        sqlque = "by_mbruid=" + my["uid"];
    }
    else if (type == "following")
    {
        sqlque = "my_mbruid=" + my["uid"];
    }
    else
    {
        sqlque = "my_mbruid=" + my["uid"] + " and rel=1";
    }
    if (category != null && category != "")
    {
        sqlque = sqlque + " and category='" + category + "'";
    }

    if (where != null && where != "")
    {
        if (keyword != null && keyword != "")
        {
            string where_set = "(";

            char[] delimiter = { '|' };
            string[] strArray = where.Split(delimiter);
            int str_int = 0;

            sqlque = sqlque + " AND ";

            foreach (var tmp in strArray)
            {
                if (str_int > 0)
                {
                    where_set = where_set + " OR ";
                }

                where_set = where_set + tmp + " LIKE '%" + keyword + "%'";
                str_int++;
            }
            where_set = where_set + ")";
            sqlque = sqlque + where_set;
        }
    }

    int list_start = (Convert.ToInt32(p) - 1) * Convert.ToInt32(recnum);      // 페이지별 리스트 개수

    int NUM = _DB.GetDbData_Count(AppState["table_s_friend"].ToString(), sqlque);
    string RCD_sql = _System.GetQuery(AppState["table_s_friend"].ToString(), "", sqlque, sort, orderby, list_start, recnum);

    TPG = _System.getTotalPage(Convert.ToDecimal(NUM), Convert.ToDecimal(recnum));     // 총 페이지수    

    _NUM.Add("follower", _DB.GetDbData_Count(AppState["table_s_friend"].ToString(), "by_mbruid=" + my["uid"]));
    _NUM.Add("following", _DB.GetDbData_Count(AppState["table_s_friend"].ToString(), "my_mbruid=" + my["uid"]));
    _NUM.Add("friend", _DB.GetDbData_Count(AppState["table_s_friend"].ToString(), "my_mbruid=" + my["uid"] + " and rel=1"));    
    
    // 개별 페이지 상단 메뉴부
    @RenderPage("_menu.cshtml", g, m)
}


<div id="friendlist">

	<div class="info">

		<div class="article">
        @{
            string friendClass = "";
            string followerClass = "";
            string followingClass = "";
            
            if(type == "friend"){                
                friendClass = "class='b'";
            }
            if (type == "follower")
            {
                followerClass = "class='b'";
            }
            if (type == "following")
            {
                followingClass = "class='b'";
            }
        }
			<a href="@g["url_page"]&amp;type=friend" @Html.Raw(friendClass)>맞팔</a><span class="num">(@_NUM["friend"])</span> <span>|</span>
			<a href="@g["url_page"]&amp;type=follower" @Html.Raw(followerClass)>팔로워</a><span class="num">(@_NUM["follower"])</span> <span>|</span>
			<a href="@g["url_page"]&amp;type=following" @Html.Raw(followingClass)>팔로잉</a><span class="num">(@_NUM["following"])</span>
		</div>

        <div class="category">
        @{
            if(type != "follower"){
                
                string _CATS_sql = "SELECT category FROM " + AppState["table_s_friend"].ToString() + " WHERE my_mbruid=" + my["uid"] + " and category<>'' GROUP BY category";
			    <select onchange="goHref('@g["url_page"]&type=@type&category='+this.value);">
			    <option value="">&nbsp;+ 전체</option>
			    <option value="">-------------</option>
                @foreach (var _R in _DB.Query(_CATS_sql))
                {
                    string sltCate = "";
                    if (_R["category"] == category)
                    {
                        sltCate = "selected='selected'";
                    }
                    <option value="@_R["category"]" @sltCate>ㆍ @_R["category"]</option>
                }
			    </select>                
            }
        }
		</div>
		<div class="clear"></div>
	</div>



	<form name="procForm" action="@g["s"]/" method="post" target="@frame_name" onsubmit="return submitCheck(this);">
    
	<input type="hidden" name="r" value="@r" />
	<input type="hidden" name="m" value="@m" />
	<input type="hidden" name="front" value="@front" />
	<input type="hidden" name="a" value="" />
	<input type="hidden" name="type" value="@type" />

	<table summary="친구 리스트입니다.">
	<caption>친구</caption> 
	<colgroup> 
	<col width="30"> 
	<col width="50"> 
	<col> 
	<col width="60"> 
	<col width="100"> 
	<col width="90"> 
	</colgroup> 
	<thead>
	<tr>
	<th scope="col" class="side1"><img src="@g["img_core"]/_public/ico_check_01.gif" class="hand" alt="" onclick="chkFlag('members');" /></th>
	<th scope="col">번호</th>
	<th scope="col">이름</th>
	<th scope="col">관계</th>
	<th scope="col">그룹</th>
	<th scope="col" class="side2">날짜</th>
	</tr>
	</thead>
	<tbody>

    @if (NUM == 0)
    {
 	    <tr>
        <td><input type="checkbox" disabled="disabled" /></td>
	    <td>1</td>
	    <td class="sbj1">
        @if (type == "friend")
        {
            @:등록된 맞팔친구가 없습니다.
        }
        else if (type == "follower")
        {
            @:팔로워가 없습니다.
        }
        else
        {
            @:팔로잉중인 회원이 없습니다.
        }
	    </td>
	    <td>-</td>
	    <td>-</td>
	    <td>@date["totime"].ToString("yyyy.MM.dd HH:mm")</td>
	    </tr>        
    }
    else
    {
        foreach (var R in _DB.Query(RCD_sql))
        {
            int pagenum = NUM - ((Convert.ToInt32(p) - 1) * Convert.ToInt32(recnum) + _rec++);
            string typeStr = "b";

            if (type == "follower")
            {
                typeStr = "m";
            }
            _M = _DB.GetDbData_M(AppState["table_s_mbrdata"].ToString(), "memberuid=" + R[typeStr + "y_mbruid"]);
            
            string nametypeStr = "";
            
            if(_M!=null) {
                nametypeStr = _M["email"];
                
                if (d_member["login_emailid"] == null || d_member["login_emailid"] == "")
                {
                    nametypeStr = _DB.GetDbData_S(AppState["table_s_mbrid"].ToString(), "uid=" + _M["memberuid"], "id").ToString();
                }                     
            }

            
	        <tr>
            <td>
	        <input type="checkbox" name="members" value="@R["uid"]" />
	        <input type="hidden" id="@Html.Raw("members_" + R["uid"])" value="@nametypeStr" />
	        </td>
	        <td>@pagenum</td>
	        <td class="sbj">
		    <a class="hand" onclick="OpenWindow('?r=@r&system=popup.papersend&iframe=Y&id=@nametypeStr');">@_M[_HS["nametype"]] (@nametypeStr)</a>
            @if (_System.getNew(R["d_regis"].ToString(), 24))
            {
                <span class="new">new</span>
            }                

	        </td>
            @{
            string friendType = "";
            string cateStr = "-";

            if (R["rel"] != "0" && R["rel"] != "")
            {
                friendType = "맞팔";
            }
            else
            {
                if (type == "follower")
                {
                    friendType = "팔로워";
                }
                else
                {
                    friendType = "팔로윙";
                }
            }

            if (R["category"] != null && R["category"] != "")
            {
                if (type != "follower")
                {
                    cateStr = R["category"];
                }
            }
            
            }
	        <td class="cat">@friendType</td>
	        <td class="cat">@cateStr</td>
	        <td>@R["d_regis"].ToString("yyyy.MM.dd HH:mm")</td>
	        </tr> 
        }
    }  

	</tbody>
	</table>
	

	<div class="pagebox01">
	<script type="text/javascript">getPageLink(10, @p, @TPG, '@g["img_core"]/page/default');</script>
	</div>

    
    @if (type != "follower")
    {
  	    <input type="text" name="category" id="iCategory" value="" class="input none" />
	    <input type="button" value="그룹지정" class="btngray" onclick="actCheck('friend_category');" />          
        <input type="button" value="언팔로우" class="btngray" onclick="actCheck('friend_unfollow');" />
    }
    else
    {
        <input type="button" value="맞팔맺기" class="btngray" onclick="actCheck('friend_follow');" />
    }
	<input type="button" value="쪽지" class="btngray" onclick="actCheck('friend_paper');" />

	&nbsp;&nbsp;
	</form>
	<form name="addForm" action="@g["s"]/" method="post" target="@Html.Raw("_action_frame_" + m)" onsubmit="return addFriend(this);">
	<input type="hidden" name="m" value="@m" />
	<input type="hidden" name="front" value="@front" />
	<input type="hidden" name="a" value="friend_add" />

    @{
        string nametypeKr = "아이디를";
        if (d_member["login_emailid"] != null & d_member["login_emailid"] != "")
        {
            nametypeKr = "이메일을";
        }    
    }
	<input type="text" name="friend" id="fCategory" value="" class="input none" title="회원 @nametypeKr 입력해주세요. 여러명에게 요청하려면 콤마(,)로 구분해서 입력해 주세요." />
	<input type="submit" value="친구요청(팔로잉)" class="btnblue" />
	</form>


</div>


<script type="text/javascript">
//<![CDATA[
function submitCheck(f)
{
	if (f.a.value == '')
	{
		return false;
	}
}
function addFriend(f)
{
	if (getId('fCategory').style.display == 'inline')
	{
		if (f.friend.value == '')
		{
			alert('요청하려는 회원 @nametypeKr 입력해 주세요.   ');
			f.friend.focus();
			return false;
		}
		return confirm('정말로 요청하시겠습니까?   ');
	}
	else {
		getId('fCategory').style.display = 'inline';
		f.friend.focus();
		return false;
	}
}
function actCheck(act)
{
	var f = document.procForm;
    var l = document.getElementsByName('members');
    var n = l.length;
	var j = 0;
    var i;
	var s = '';

    for (i = 0; i < n; i++)
	{
		if(l[i].checked == true)
		{
			j++;
			s += getId('members_'+l[i].value).value + ',';
		}
	}

	if (act == 'friend_paper')
	{
		if (!j)
		{
			alert('선택된 회원이 없습니다.      ');
			return false;
		}

		OpenWindow('?r=@r&system=popup.papersend&iframe=Y&id='+s);
	}
	else {

		if (!j)
		{
			alert('선택된 회원이 없습니다.      ');
			return false;
		}

		if (act == 'friend_category')
		{
			if (getId('iCategory').style.display == 'inline')
			{
				if (f.category.value == '')
				{
					alert('지정하려는 분류명을 입력해 주세요.   ');
					f.category.focus();
					return false;
				}
			}
			else {
				getId('iCategory').style.display = 'inline';
				f.category.focus();
				return false;
			}
		}
		
		if(confirm('정말로 실행하시겠습니까?    '))
		{
			f.a.value = act;
			f.submit();
		}
	}
}
//]]>
</script>


