@{
    /*****************************************************************
    //
    // Programmed by SungHO Kim (Migration: TaiHyung Kim, YoonA Shim)
    // KimsQ-Rx (for Microsoft ASP.NET WebPages)
    // Copyrights © Redblock Allrights Reserved. Powered by kimsQ-Rx
    // Since 2011.
    //
    *****************************************************************/
    

    //////////////////////////////////////////////////////////////////
    /// Get PageDate
    //////////////////////////////////////////////////////////////////
    var my = PageData[0];
    var g = PageData[1];
    var s = PageData[2];
    var referer = PageData[3];
    var m = PageData[4];
    var _HM = PageData[5];
    var _HS = PageData[6];
    var r = PageData[7];
    var c = PageData[8];
    var bid = PageData[9];
    var date = PageData[10];

    //////////////////////////////////////////////////////////////////
    /// Get Request
    //////////////////////////////////////////////////////////////////
    var remote = Request["remote"];      
    var type = Request["type"];          
    var folder = Request["folder"];      
    var subfolder = Request["subfolder"];
    var insfolder = Request["insfolder"];
    var mobile = Request["mobile"];

    @_System.checkAdmin(my["admin"], 0)
    
    string saveFile = "";
    string isPack = "";
    string extPath = g["path_root_ps"] + g["path_tmp"] + "app";
    string extPath1 = extPath + "\\"; 
    
    var typeset = new Dictionary<string, string>();
    
    typeset.Add("layout", "레이아웃이");
    typeset.Add("widget", "위젯이");
    typeset.Add("switch", "스위치가");
    typeset.Add("bbstheme", "게시판테마가");

    bool isUpload = false;
    
    if(remote != null && remote == "Y")
    {
        saveFile = extPath + "\\rb_" + type + "_app.zip";  //value => _tmp\\app\\rb_\\type_app.zip  
        
        if (File.Exists(saveFile))
        {
            if (subfolder!=null && subfolder!="")
            {
                if (Directory.Exists(folder + subfolder))
                {
                    @_System.getLink("","","설치경로 정보가 맞지않아 설치가 중단되었습니다. 직접 다운로드 받아 설치하세요.","-2")
                    return;
                }
            }
            else
            {
                if (Directory.Exists(folder))
                {
                    @_System.getLink("", "", "설치경로 정보가 맞지않아 설치가 중단되었습니다. 직접 다운로드 받아 설치하세요.", "-2")
                    return;
                }
            }

            if (File.Exists(folder + insfolder + "\\main.cshtml"))
            {
                @_System.getLink("", "", "이미 동일한 폴더명(" + insfolder.Split('\\')[(insfolder.Split('\\').Length) - 1] + ")의 패키지가 존재합니다.", "-2")
                return;
            }

            if (!saveFile.ToLower().EndsWith(".zip"))
            {
                return;
            }

            _System.Unzip(saveFile, saveFile.Substring(0, saveFile.Length - 4));

            string opendir = Directory.GetDirectories(extPath1)[0] + "\\";
            
            foreach (string file in Directory.GetDirectories(opendir))
            {
                string file_name = file.Substring(opendir.Length, file.Length - opendir.Length);

                if (file_name != "." && file_name != "..")
                {
                    if (File.Exists(file + "\\name.txt"))
                    {
                        if (subfolder != null && subfolder != "")
                        {
                            if (File.Exists(g["path_root_ps"] + folder + subfolder + file_name + "\\name.txt"))
                            {
                                isPack = file_name;
                                break;
                            }
                        }
                        else
                        {
                            if (File.Exists(g["path_root_ps"] + folder + file_name + "\\name.txt"))
                            {
                                isPack = file_name;
                                break;
                            }
                        }

                        if (subfolder != null && subfolder != "")
                        {
                            _System.DirCopy(saveFile.Substring(0, saveFile.Length - 4), g["path_root_ps"] + folder + subfolder);
                        }
                        else
                        {
                            _System.DirCopy(saveFile.Substring(0, saveFile.Length - 4), g["path_root_ps"] + folder);
                        }
                        isUpload = true;
                        break;
                    }
                }
            }

            Directory.Delete(extPath);


            if (isPack != null && isPack != "")
            {
			    @_System.getLink("", "", "이미 동일한 폴더명(" + isPack + ")의 " + typeset[type] + " 존재합니다.", "")
                return;
            }
            if (isUpload == false)
            {
			    @_System.getLink("", "", "패키지규격에 맞지 않는 파일입니다", "")
                return;
            }
        }

        string strMB = "";
        if (mobile != null && mobile != "")
        {
            strMB = "&mobile=" + mobile;
        }   

        @_System.getLink(g["s"] + "/?r=" + r + "&m=admin&module=" + m + "&front=pack&type=" + type + "&insfolder=" + insfolder + strMB, "parent.", "[" + _System.getFolderName(folder + insfolder, "name.txt") + "] " + typeset[type] + " 정상적으로 설치되었습니다.", "")
        return;
    }

    else
    {   
        var uploadedFile = Request.Files[0];
        string tmpname = Path.GetTempFileName();
        string realname = Path.GetFileName(uploadedFile.FileName);     //파일명 가져오기           
        string fileExt = (_System.getExt(realname)).ToLower();              //확장자명
        saveFile = extPath1 + date["totime"].ToString("yyMMdd_HHmmss") + ".zip";   // 저장경로 + 저장이름    

        if (uploadedFile.ContentLength > 0)
        {
            if (type == "layout")
            {
                if (realname.Substring(0, 10) != "rb_layout_")
                {
                    @_System.getLink("", "", "레이아웃 패키지가 아닙니다.", "")
                    return;
                }
            }
            if (type == "widget")
            {
                if (realname.Substring(0, 10) != "rb_widget_")
                {
                    @_System.getLink("", "", "위젯 패키지가 아닙니다.", "")
                    return;
                }
            }
            if (type == "bbstheme")
            {
                if (realname.Substring(0, 12) != "rb_bbstheme_")
                {
                    @_System.getLink("", "", "게시판테마 패키지가 아닙니다.", "")
                    return;
                }
            }
            if (fileExt != "zip")
            {
                @_System.getLink("", "", "패키지는 반드시 zip압축 포맷이어야 합니다.", "")
                return;
            }

            uploadedFile.SaveAs(saveFile);        

            _System.Unzip(saveFile, saveFile.Substring(0, saveFile.Length - fileExt.Length));

            string opendir = Directory.GetDirectories(extPath1)[0] + "\\";
            foreach (string file in Directory.GetDirectories(opendir))
            {
                string file_name = file.Substring(opendir.Length, file.Length - opendir.Length);

                if (file_name != "." && file_name != "..")
                {
                    if (File.Exists(file + "\\name.txt"))
                    {
                        if (subfolder != null && subfolder != "")
                        {
                            if (File.Exists(g["path_root_ps"] + folder + subfolder + file_name + "\\name.txt"))
                            {
                                isPack = file_name;
                                break;
                            }
                        }
                        else
                        {
                            if (File.Exists(g["path_root_ps"] + folder + file_name + "\\name.txt"))
                            {
                                isPack = file_name;
                                break;
                            }
                        }       
                        
                        if (subfolder != null && subfolder != "")
                        {
                            _System.DirCopy(saveFile.Substring(0, saveFile.Length - 4), g["path_root_ps"] + folder + subfolder);
                        }
                        else
                        {
                            _System.DirCopy(saveFile.Substring(0, saveFile.Length - 4), g["path_root_ps"] + folder);
                        }
                        
                        isUpload = true;
                        break;
                    }
                }
            }

            //_System.delAllDir(extPath);

            if (isPack != null && isPack != "")
            {
			    @_System.getLink("", "", "이미 동일한 폴더명(" + isPack + ")의 " + typeset[type] + " 존재합니다.", "")
                return;
            }
            if (isUpload == false)
            {
			    @_System.getLink("", "", "패키지규격에 맞지 않는 파일입니다", "")
                return;
            }
        }
                    
        @_System.getLink("reload", "parent.", "패키지가 정상적으로 등록되었습니다.", "")
        return;
    }
}
