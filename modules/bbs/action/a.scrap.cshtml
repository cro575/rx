@{
    /*****************************************************************
    //
    // Programmed by SungHO Kim (Migration: TaiHyung Kim, YoonA Shim)
    // KimsQ-Rx (for Microsoft ASP.NET WebPages)
    // Copyrights © Redblock Allrights Reserved. Powered by kimsQ-Rx
    // Since 2011.
    //
    *****************************************************************/
    

    //////////////////////////////////////////////////////////////////
    /// Get PageDate
    //////////////////////////////////////////////////////////////////
    var my = PageData[0];
    var g = PageData[1];
    var s = PageData[2];
    var referer = PageData[3];
    var m = PageData[4];
    var _HM = PageData[5];
    var _HS = PageData[6];
    var r = PageData[7];
    var c = PageData[8];
    var bid = PageData[9];
    var date = PageData[10];    

    //////////////////////////////////////////////////////////////////
    /// Get Request
    //////////////////////////////////////////////////////////////////
    var uid = Request["uid"];
    var skin = Request["skin"];
    var iframe = Request["iframe"];

    if (my["uid"] == 0) 
    {
        @_System.getLink("", "", "정상적인 접근이 아닙니다.", "")
        return;        
    }    

    int R_count = _DB.GetDbData_Count(AppState["table_bbsdata"].ToString(), "uid="+uid);
    
    if(R_count == 0) {
        @_System.getLink("", "", "삭제되었거나 존재하지 않는 게시물입니다.", "")
        return;
    }
    
    dynamic R = _DB.GetDbData_M(AppState["table_bbsdata"].ToString(), "uid="+uid);
    int B = _DB.GetDbData_Count(AppState["table_bbslist"].ToString(), "uid="+R["bbs"]);

    if (B == 0) {
        @_System.getLink("", "", "존재하지 않는 게시판입니다.", "")
        return;        
    }
    
    int mbruid = Convert.ToInt32(my["uid"]);
    string B_name = _DB.GetDbData_S(AppState["table_bbslist"].ToString(), "uid="+R["bbs"], "name").ToString();
    string category = B_name;
    
    if (_HM["name"] != "") 
    {
        category = _HM["name"];
    }

    string subject = R["subject"];
    string url = "http://"+Request["HTTP_HOST"]+Request["SCRIPT_NAME"].Replace("index.cshtml", "");
    string backUrl;
    
    if(c != null && c != "") 
    {
        backUrl = "?c="+c+"&uid="+R["uid"]+_System.getLinkFilter("skin|iframe", skin+"|"+iframe);
    }
    else {
        backUrl = "?m="+m+"&uid="+R["uid"]+_System.getLinkFilter("bid|skin|iframe", bid+"|"+skin+"|"+iframe);
    }

    url = url + backUrl;
    
    int scrap_num = _DB.GetDbData_Count(AppState["table_s_scrap"].ToString(), "mbruid="+mbruid+" AND url='"+url+"'");
    
    if(scrap_num > 0) {
        @_System.getLink("", "", "이미 스크랩된 게시물입니다.", "")
        return;        
    }
    
    string INSERT_SCRAP_SQL = "INSERT INTO " + AppState["table_s_scrap"].ToString() + " (mbruid, category, subject, url, d_regis) VALUES (" + mbruid + ",'" + category + "','" + subject + "','" + url + "', getdate())";
    
    @_DB.Execute(INSERT_SCRAP_SQL);
    
    @_System.getLink("", "", "스크랩 되었습니다.", "")
    return;        
}